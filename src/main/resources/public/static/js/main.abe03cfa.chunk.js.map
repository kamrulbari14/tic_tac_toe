{"version":3,"sources":["TicTacToe/TicTacToe.js","App.js","reportWebVitals.js","index.js"],"names":["TicTacToe","useState","turn","setTurn","Array","fill","cells","setCells","winner","setWinner","disable","setDisable","start","setStart","gameData","setGameData","line1","setLine1","line2","setLine2","line3","setLine3","line4","setLine4","line5","setLine5","line6","setLine6","line7","setLine7","line8","setLine8","Cell","num","disabled","style","marginLeft","fontSize","height","width","backgroundColor","border","color","onClick","data","gameId","content","player","choice","row","column","fetch","method","headers","body","JSON","stringify","then","response","json","winningCell","catch","error","console","squares","alert","handleClick","position","bottom","playerSelect","option","className","marginBottom","display","size","marginRight","status","zIndex","left","top","transform","right","marginTop","message","window","location","reload","App","minHeight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abe03cfa.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport './TicTacToe.css';\r\n\r\nconst TicTacToe = () => {\r\n    const [turn, setTurn] = useState('o');\r\n    const [cells, setCells] = useState(Array(9).fill(''));\r\n    const [winner, setWinner] = useState(false);\r\n    const [disable, setDisable] = useState(true);\r\n    const [start, setStart] = useState(false);\r\n    const [gameData, setGameData] = useState();\r\n    const [line1, setLine1] = useState('none');\r\n    const [line2, setLine2] = useState('none');\r\n    const [line3, setLine3] = useState('none');\r\n    const [line4, setLine4] = useState('none');\r\n    const [line5, setLine5] = useState('none');\r\n    const [line6, setLine6] = useState('none');\r\n    const [line7, setLine7] = useState('none');\r\n    const [line8, setLine8] = useState('none');\r\n\r\n    const handleClick = (num) => {\r\n        let data = {}\r\n        if (num === 0 & turn === 'x') {\r\n            data = {\r\n                gameId: gameData.content.gameId,\r\n                player: \"CROSS\",\r\n                choice: \"CROSS\",\r\n                row: 0,\r\n                column: 0,\r\n            }\r\n        } else if (num === 0 & turn === 'o') {\r\n            data = {\r\n                gameId: gameData.content.gameId,\r\n                player: \"CIRCLE\",\r\n                choice: \"CIRCLE\",\r\n                row: 0,\r\n                column: 0,\r\n            }\r\n        } else if (num === 1 & turn === 'x') {\r\n            data = {\r\n                gameId: gameData.content.gameId,\r\n                player: \"CROSS\",\r\n                choice: \"CROSS\",\r\n                row: 0,\r\n                column: 1,\r\n            }\r\n        } else if (num === 1 & turn === 'o') {\r\n            data = {\r\n                gameId: gameData.content.gameId,\r\n                player: \"CIRCLE\",\r\n                choice: \"CIRCLE\",\r\n                row: 0,\r\n                column: 1,\r\n            }\r\n        } else if (num === 2 & turn === 'x') {\r\n            data = {\r\n                gameId: gameData.content.gameId,\r\n                player: \"CROSS\",\r\n                choice: \"CROSS\",\r\n                row: 0,\r\n                column: 2,\r\n            }\r\n        } else if (num === 2 & turn === 'o') {\r\n            data = {\r\n                gameId: gameData.content.gameId,\r\n                player: \"CIRCLE\",\r\n                choice: \"CIRCLE\",\r\n                row: 0,\r\n                column: 2,\r\n            }\r\n        } else if (num === 3 & turn === 'x') {\r\n            data = {\r\n                gameId: gameData.content.gameId,\r\n                player: \"CROSS\",\r\n                choice: \"CROSS\",\r\n                row: 1,\r\n                column: 0,\r\n            }\r\n        } else if (num === 3 & turn === 'o') {\r\n            data = {\r\n                gameId: gameData.content.gameId,\r\n                player: \"CIRCLE\",\r\n                choice: \"CIRCLE\",\r\n                row: 1,\r\n                column: 0,\r\n            }\r\n        } else if (num === 4 & turn === 'x') {\r\n            data = {\r\n                gameId: gameData.content.gameId,\r\n                player: \"CROSS\",\r\n                choice: \"CROSS\",\r\n                row: 1,\r\n                column: 1,\r\n            }\r\n        } else if (num === 4 & turn === 'o') {\r\n            data = {\r\n                gameId: gameData.content.gameId,\r\n                player: \"CIRCLE\",\r\n                choice: \"CIRCLE\",\r\n                row: 1,\r\n                column: 1,\r\n            }\r\n        } else if (num === 5 & turn === 'x') {\r\n            data = {\r\n                gameId: gameData.content.gameId,\r\n                player: \"CROSS\",\r\n                choice: \"CROSS\",\r\n                row: 1,\r\n                column: 2,\r\n            }\r\n        } else if (num === 5 & turn === 'o') {\r\n            data = {\r\n                gameId: gameData.content.gameId,\r\n                player: \"CIRCLE\",\r\n                choice: \"CIRCLE\",\r\n                row: 1,\r\n                column: 2,\r\n            }\r\n        } else if (num === 6 & turn === 'x') {\r\n            data = {\r\n                gameId: gameData.content.gameId,\r\n                player: \"CROSS\",\r\n                choice: \"CROSS\",\r\n                row: 2,\r\n                column: 0,\r\n            }\r\n        } else if (num === 6 & turn === 'o') {\r\n            data = {\r\n                gameId: gameData.content.gameId,\r\n                player: \"CIRCLE\",\r\n                choice: \"CIRCLE\",\r\n                row: 2,\r\n                column: 0,\r\n            }\r\n        } else if (num === 7 & turn === 'x') {\r\n            data = {\r\n                gameId: gameData.content.gameId,\r\n                player: \"CROSS\",\r\n                choice: \"CROSS\",\r\n                row: 2,\r\n                column: 1,\r\n            }\r\n        } else if (num === 7 & turn === 'o') {\r\n            data = {\r\n                gameId: gameData.content.gameId,\r\n                player: \"CIRCLE\",\r\n                choice: \"CIRCLE\",\r\n                row: 2,\r\n                column: 1,\r\n            }\r\n        } else if (num === 8 & turn === 'x') {\r\n            data = {\r\n                gameId: gameData.content.gameId,\r\n                player: \"CROSS\",\r\n                choice: \"CROSS\",\r\n                row: 2,\r\n                column: 2,\r\n            }\r\n        } else if (num === 8 & turn === 'o') {\r\n            data = {\r\n                gameId: gameData.content.gameId,\r\n                player: \"CIRCLE\",\r\n                choice: \"CIRCLE\",\r\n                row: 2,\r\n                column: 2,\r\n            }\r\n        }\r\n\r\n        fetch('/v1/api/playGame', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setGameData(data)\r\n                if (data.content.winner !== null) {\r\n                    setDisable(true)\r\n                    setWinner(true)\r\n                }\r\n                if (data.content.winningCell === \"[0, 1, 2]\") {\r\n                    setLine1('block')\r\n                } else if (data.content.winningCell === \"[3, 4, 5]\") {\r\n                    setLine2('block')\r\n                } else if (data.content.winningCell === \"[6, 7, 8]\") {\r\n                    setLine3('block')\r\n                } else if (data.content.winningCell === \"[0, 3, 6]\") {\r\n                    setLine4('block')\r\n                } else if (data.content.winningCell === \"[1, 4, 7]\") {\r\n                    setLine5('block')\r\n                } else if (data.content.winningCell === \"[2, 5, 8]\") {\r\n                    setLine6('block')\r\n                } else if (data.content.winningCell === \"[0, 4, 8]\") {\r\n                    setLine7('block')\r\n                } else if (data.content.winningCell === \"[2, 4, 6]\") {\r\n                    setLine8('block')\r\n                }\r\n            })\r\n\r\n            .catch(error => {\r\n                console.error(error)\r\n            })\r\n\r\n        if (cells[num] !== '') {\r\n            alert(\"Already inserted!!\");\r\n            return;\r\n        }\r\n\r\n        let squares = [...cells];\r\n\r\n        if (turn === 'x') {\r\n            squares[num] = 'x';\r\n            setTurn('o');\r\n        } else {\r\n            squares[num] = 'o';\r\n            setTurn('x');\r\n        }\r\n        setCells(squares);\r\n    };\r\n\r\n    const handleRestart = () => {\r\n        window.location.reload()\r\n    };\r\n\r\n    const Cell = ({num}) => {\r\n        return <td>\r\n            <button disabled={disable} style={{\r\n                marginLeft: '-10px',\r\n                fontSize: '100px',\r\n                height: '120px',\r\n                width: '120px',\r\n                backgroundColor: 'white',\r\n                border: '1px solid none',\r\n                color: 'red'\r\n            }} onClick={() => handleClick(num)}>\r\n                {\r\n                    cells[num] === 'x' ?\r\n                        <span style={{position: 'relative', bottom: '10px', color: 'saddlebrown'}}>{cells[num]}</span> :\r\n                        <span style={{position: 'relative', bottom: '10px', color: 'orange'}}>{cells[num]}</span>\r\n                }\r\n\r\n            </button>\r\n        </td>;\r\n    };\r\n    const playerSelect = (option) => {\r\n        setTurn(option)\r\n        let data = {}\r\n        if (option === 'x') {\r\n            data = {\r\n                player: 'CROSS'\r\n            }\r\n        } else if (option === 'o') {\r\n            data = {\r\n                player: 'CIRCLE'\r\n            }\r\n        }\r\n        fetch('/v1/api/playGame', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data) {\r\n                    setStart(true)\r\n                }\r\n                setGameData(data)\r\n                setDisable(false)\r\n            })\r\n\r\n            .catch(error => {\r\n                console.error(error)\r\n            })\r\n    }\r\n    return (\r\n        <div className='container'>\r\n            <div className='text-center' style={{marginBottom: '3px', color: 'midnightblue'}}><h1>Tic Tac Toe Game</h1>\r\n            </div>\r\n            {!start && <div style={{display: 'flex'}}>\r\n                <font size={'4'} style={{marginRight: '10px'}}><b>Select First Player</b></font>\r\n                <div style={{marginBottom: '10px'}}>\r\n                    <button onClick={() => playerSelect('x')} style={{marginRight: '7px'}}><b>Cross(x)</b></button>\r\n                    <button onClick={() => playerSelect('o')} style={{marginRight: '18px'}}><b>Circle(o)</b></button>\r\n                </div>\r\n                <br/>\r\n            </div>}\r\n            {start ?\r\n                <div className='text-center'><font size={'4'}><b>Status: </b>{gameData?.content.status}</font></div> :\r\n                <div></div>}\r\n\r\n\r\n            <table style={{display: 'flex'}}>\r\n\t\t\t\t<div style={{ display: 'flex' }}>\r\n\t\t\t\t\t<div style={{ display: 'flex', zIndex: 1 }}>\r\n\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\twidth: '4px', height: '320px', backgroundColor: 'black', marginRight: '10px', position: 'relative', left: '65px', top: '15px',\r\n\t\t\t\t\t\t\tdisplay: `${line4}`\r\n\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\twidth: '4px', height: '320px', backgroundColor: 'black', marginRight: '10px', position: 'relative', left: '179px', top: '15px',\r\n\t\t\t\t\t\t\tdisplay: `${line5}`\r\n\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\twidth: '4px', height: '320px', backgroundColor: 'black', marginRight: '10px', position: 'relative', left: '293px', top: '15px',\r\n\t\t\t\t\t\t\tdisplay: `${line6}`\r\n\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ display: 'flex', zIndex: 1 }}>\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\twidth: '4px', height: '380px', backgroundColor: 'black', transform: 'rotate(44deg)', position: 'relative', left: '158px',\r\n\t\t\t\t\t\t\tdisplay: `${line8}`\r\n\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\twidth: '4px', height: '380px', backgroundColor: 'black', transform: 'rotate(136deg)', position: 'relative', left: '176px',\r\n\t\t\t\t\t\t\tdisplay: `${line7}`\r\n\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n                <div>\r\n                    <tbody>\r\n\r\n                    <tr>\r\n                        <Cell num={0}/>\r\n                        <Cell num={1}/>\r\n                        <Cell num={2}/>\r\n                    </tr>\r\n                    <tr style={{position: 'relative', top: '-7px'}}>\r\n                        <Cell num={3}/>\r\n                        <Cell num={4}/>\r\n                        <Cell num={5}/>\r\n                    </tr>\r\n                    <tr style={{position: 'relative', top: '-14px'}}>\r\n                        <Cell num={6}/>\r\n                        <Cell num={7}/>\r\n                        <Cell num={8}/>\r\n                    </tr>\r\n                    </tbody>\r\n                </div>\r\n\r\n            </table>\r\n\t\t\t<div >\r\n\r\n\t\t\t\t<div style={{ width: '300px', height: '4px', backgroundColor: 'black', position: 'relative', bottom: '315px', right: '8px', display: `${line1}` }}></div>\r\n\r\n\t\t\t\t<div style={{ width: '300px', height: '4px', backgroundColor: 'black', position: 'relative', bottom: '198px', right: '8px', display: `${line2}` }}></div>\r\n\r\n\t\t\t\t<div style={{ width: '300px', height: '4px', backgroundColor: 'black', position: 'relative', bottom: '82px', right: '8px', display: `${line3}` }}></div>\r\n\t\t\t</div>\r\n\r\n            {start && <div className='text-center' style={{marginTop: '-10px'}}><font\r\n                size={'3'}>{gameData?.content.message}</font></div>}\r\n\r\n\r\n            {winner && (\r\n                <div style={{marginTop: '3px'}}>\r\n                    <div className='text-center '><font size={'3'}><b>Result: </b><b\r\n                        style={{color: 'green'}}>{gameData?.content.winner}</b></font></div>\r\n\r\n                    <div style={{marginTop: '6px'}}>\r\n                        <button onClick={() => handleRestart()}>Play Again</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TicTacToe;\r\n","import './App.css';\r\nimport {HashRouter as Router, Route} from \"react-router-dom\";\r\nimport TicTacToe from './TicTacToe/TicTacToe';\r\n\r\nfunction App() {\r\n    return (\r\n        <div style={{minHeight: '1025px'}} className='App'>\r\n            <Router>\r\n                <Route>\r\n                    <TicTacToe/>\r\n                </Route>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}